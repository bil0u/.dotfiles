<#
.Synopsis
  Configures system defaults
.DESCRIPTION
  Text here
#>

{ { template "darwin/utils.ps1" . } }

Filename "system-defaults"

# {{ template "darwin/elevate.ps1" . }}

# --- Disable Settings ---
Disable-UAC

Action "Computer identity"

$computername = { { .host.friendly_name } }
if ($env:computername -ne $computername) {
  Rename-Computer -NewName $computername
}


Action "Windows Explorer"

Set-WindowsExplorerOptions -EnableShowProtectedOSFiles -DisableOpenFileExplorerToQuickAccess -DisableShowRecentFilesInQuickAccess -DisableShowFrequentFoldersInQuickAccess

# Better File Explorer
Set-ItemProperty -Path HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name NavPaneExpandToCurrentFolder -Value 1
Set-ItemProperty -Path HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name NavPaneShowAllFolders -Value 1


Action "Telemetry"

# Ad Privacy
If (-Not (Test-Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo")) {
  New-Item -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo | Out-Null
}
Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo -Name Enabled -Type DWord -Value 0

# Disable activity tracking
@('EnableActivityFeed', 'PublishUserActivities', 'UploadUserActivities') | % { Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Windows\System -Name $_ -Type DWord -Value 0 }

# Disable Telemetry (requires a reboot to take effect)
Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection -Name AllowTelemetry -Type DWord -Value 0
Get-Service DiagTrack, Dmwappushservice | Stop-Service | Set-Service -StartupType Disabled

Action "Bing"

# Disable Bing search results in start menu
Disable-BingSearch
Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search -Name BingSearchEnabled -Type DWord -Value 0

# Disable SmartScreen filter for store apps
Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppHost -Name EnableWebContentEvaluation -Type DWord -Value 0

Action "XBox Gamebar"

# Disable Xbox Gamebar
Disable-GameBarTips
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" -Name AppCaptureEnabled -Type DWord -Value 0
Set-ItemProperty -Path "HKCU:\System\GameConfigStore" -Name GameDVR_Enabled -Type DWord -Value 0

Action "Wi-Fi"

# WiFi Sense: disable hotspot sharing
Set-ItemProperty -Path HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting -Name value -Type DWord -Value 0
# WiFi Sense: disable hotspot auto-connect
Set-ItemProperty -Path HKLM:\Software\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots -Name value -Type DWord -Value 0

Action "Junk removal"

# --- Uninstall Microsoft junk ---
Get-AppxPackage Microsoft.*3D* | Remove-AppxPackage
Get-AppxPackage Microsoft.*advertising* | Remove-AppxPackage
Get-AppxPackage Microsoft.Bing* | Remove-AppxPackage
Get-AppxPackage Microsoft.CommsPhone | Remove-AppxPackage
Get-AppxPackage Microsoft.Getstarted | Remove-AppxPackage
Get-AppxPackage Microsoft.Messaging | Remove-AppxPackage
Get-AppxPackage Microsoft.MicrosoftOfficeHub | Remove-AppxPackage
Get-AppxPackage Microsoft.MicrosoftStickyNotes | Remove-AppxPackage
Get-AppxPackage Microsoft.Office.OneNote | Remove-AppxPackage
Get-AppxPackage Microsoft.Office.Sway | Remove-AppxPackage
Get-AppxPackage Microsoft.OneConnect | Remove-AppxPackage
Get-AppxPackage Microsoft.People | Remove-AppxPackage
Get-AppxPackage Microsoft.SkypeApp | Remove-AppxPackage
Get-AppxPackage Microsoft.Wallet | Remove-AppxPackage
Get-AppxPackage Microsoft.Windows.Photos | Remove-AppxPackage
Get-AppxPackage Microsoft.WindowsAlarms | Remove-AppxPackage
Get-AppxPackage Microsoft.WindowsFeedbackHub | Remove-AppxPackage
Get-AppxPackage Microsoft.WindowsMaps | Remove-AppxPackage
Get-AppxPackage Microsoft.WindowsPhone | Remove-AppxPackage
Get-AppxPackage Microsoft.WindowsSoundRecorder | Remove-AppxPackage
Get-AppxPackage microsoft.windowscommunicationsapps | Remove-AppxPackage
Get-AppxPackage Microsoft.Zune* | Remove-AppxPackage
Get-appxpackage *Microsoft.549981C3F5F10* | Remove-AppxPackage # Cortana

# Windows features
Disable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart -WarningAction SilentlyContinue | Out-Null
cinst Microsoft-Windows-Subsystem-Linux -source windowsfeatures

Action "Host file"

Invoke-WebRequest -Uri "https://someonewhocares.org/hosts/hosts" -OutFile "${env:SystemRoot}\System32\drivers\etc\hosts"


# --- Restore Settings ---
Enable-UAC

Action "Power scheme"

$PowerScheme = @{
  #    High Performance - The scheme is designed to deliver maximum performance at the expense of power consumption savings.
  "GUID_MIN_POWER_SAVINGS" = "8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c"
}
$PowerScheme.GetEnumerator() | % { $_.key ; $_.value ; PowerCFG -SetActive $_.value ; PowerCFG -GetActiveScheme ; } ;

Action "Updates"

# Enable Automatic updates

# 0 |	aunlNotConfigured	            | Not configured	[must be set via Windows Update Troubleshooter]
# 1 |	aunlDisabled		          	  | Never check for updates (not recommended)
# 2 |	aunlNotifyBeforeDownload	    | Check for updates but let me choose whether to download and install them
# 3 |	aunlNotifyBeforeInstallation	| Download updates but let me choose wether to install them
# 4 |	aunlScheduledInstallation	    | Install updates automatically (recommended)

$WindowsUpdateAgent = (New-Object -com "Microsoft.Update.AutoUpdate").Settings
$WindowsUpdateAgent.NotificationLevel = 4
$WindowsUpdateAgent.Save()

# Include optional or recommended updates when a search for updates and installation of updates is performed
$WindowsUpdateAgent.IncludeRecommendedUpdates = $true

# Enable display notifications for featured updates
$WindowsUpdateAgent.FeaturedUpdatesEnabled = $true

Action "Languages & localization"

Action "General UI/UX"

Action "Quick look"

