{{/* Constants, edit this if you fork the project */}}

{{- $name := "Ugo Pop√©e" -}}

{{- $personalEmail := "ugo@p0p.ee" -}}
{{- $personalAccountId := "Y5UFKSYDXJED7JQCQGIYRA7B6A" -}}
{{- $personalVaultId := "h66u55hw4da4f5bhbp7fa2ea74" -}}

{{- $workEmail := "ugo@iliomad.fr" -}}
{{- $workAccountId := "WIVYUIS6LZHHTIFPIXUWKIUQNU" -}}
{{- $workVaultId := "ng4vabtt7dxvtdggfphteon5am" -}}
{{- $workEngineeringVaultId := "wgnajbjber6dehxp34r6or4o3m" -}}

{{- $githubUsername := "bil0u" -}}
{{- $githubEmail := "github@p0p.ee" -}}

{{/* Prompt for variables */}}

{{- $friendlyName := promptString "Computer friendly name" -}}
{{- $hostName := promptString "Host name" -}}
{{- $personal := promptBool "Personal use" -}}
{{- $work := promptBool "Work use" -}}

{{/* Guess OS based variables */}}

{{- $osid := .chezmoi.os -}}
{{- if hasKey .chezmoi.osRelease "id" -}}
{{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{- $chassisType := "desktop" }}
{{- if eq .chezmoi.os "darwin" }}
{{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") }}
{{-     $chassisType = "laptop" }}
{{-   else }}
{{-     $chassisType = "desktop" }}
{{-   end }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim }}
{{- end }}

{{- $osBuild := "unknown" }}
{{- $osVersion := "unknown" }}
{{- $osMajor := "unknown" }}
{{- if eq .chezmoi.os "darwin" }}
{{-	  $swvers := (output "sw_vers") }}
{{-	  $osBuild = mustRegexFind "\t[0-9A-Z]{5,}" $swvers | trimPrefix "\t" }}
{{-	  $osVersion = mustRegexFind "\t[0-9]{2}\\.[0-9]{1,2}\\.?[0-9]{0,2}" $swvers | trimPrefix "\t" }}
{{-	  $osMajor = mustRegexFind "[0-9]{2}" $osVersion }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $osVersion = .chezmoi.osRelease }}
{{-   $osMajor = mustRegexFind "[0-9]+" $osVersion }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $osBuild = .chezmoi.windowsVersion.currentBuild }}
{{-   $osVersion = .chezmoi.windowsVersion.currentVersion }}
{{-   $osMajor = .chezmoi.windowsVersion.currentMajorVersionNumber }}
{{- end }}

{{- /* Store needed data */}}

data:
  host:
    friendly_name: {{ $friendlyName | quote }}
    host_name: {{ $hostName | quote }}
    chassis_type: {{ $chassisType | quote }}
    osid: {{ $osid | quote }}
    version:
      build: {{ $osBuild | quote }}
      major: {{ $osMajor | quote }}
      number: {{ $osVersion | quote }}
  name: {{ $name | quote }}
  {{- if $personal }}
  personal:
    email: {{ $personalEmail | quote }}
    accounts:
      op:
        account_id: {{ $personalAccountId | quote }}
        vault: {{ $personalVaultId | quote }}
      github:
        username: {{ $githubUsername | quote }}
        email: {{ $githubEmail | quote }}
  {{- end }}
  {{- if $work }}
  work:
    email: {{ $workEmail | quote }}
    accounts:
      op:
        account_id: {{ $workAccountId | quote }}
        vault: {{ $workVaultId | quote }}
        engineering_vault: {{ $workEngineeringVaultId | quote }}
  {{- end }}

{{/* chezmoi flags */}}

diff:
  exclude:
    - "externals"

edit:
  command: code
  args:
    - "--wait"
